{"hash":"752c6ce69aa6bc2761e11346ad248f842b46c834","data":{"post":{"title":"Avoid pushing to a wrong remote in a git repo","slug":"avoid-pushing-to-wrong-remote","datetime":"2024-02-23 20:12:19","content":"<p>If you work with open source, it is possible that in your local repository you\nhave added multiple remotes to work with. Let's say one for upstream and one for\nyour fork.</p>\n<p>More often than I would expect, I end up pushing to upstream (if I have rights\nto the repo) when I wanted to push my fork and it sometimes can be very\nannoying.</p>\n<p>A small trick I've been using to avoid this is simply erasing the push url for\nthe remote I don't want to push directly.</p>\n<p>When you add a remote to your repo with <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git remote add &lt;remote_name&gt;\n&lt;remote_url&gt;</code>, git sets 2 urls for it: one for fetching changes and another for\npushing. This means for the same remote we could have different urls which gives\nus flexibility to handle our workflow.</p>\n<p>Running <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git remote -v</code> you can see how the remotes are organized in your local\nrepo and you will see something like:</p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">╰─➤  git remote -v\norigin  git@github.com:anarute/anarute.github.io.git (fetch)\norigin  git@github.com:anarute/anarute.github.io.git (push)\nfork  git@github.com:otheruser/anarute.github.io.git (fetch)\nfork  git@github.com:otheruser/anarute.github.io.git (push)</code>\n<p>As a very simple way to avoid pushing to the remote you don't want, you can\noverride the remote's push url with <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git remote set-url --push &lt;remote_name&gt;\nno-push</code>, this way even if you try to push to it, git won't find a valid url and\nyou are safe from commiting things to the wrong place.</p>\n<code class=\"shiki\" style=\"background: #2e3440; color: #d8dee9\">╰─➤  git push origin main\nfatal: &#039;no-push&#039; does not appear to be a git repository\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists</code>\n<p>While writing this post it also occurred to me that you can even set the fetch\nurl for the main repo and the push url for you fork, making the work between the\nupstream and fork look like it's the same repo but in reality you are working\nwith two. I can imagine this being a bit radical and can lead to unwanted\nscenarios when for some reason you do need to fetch from the fork, but maybe\nit's worth experimenting and see what suites your workflow better.</p>\n","description":"Simple trick to avoid pushing to a wrong remote when using multiple remotes in git","cover":"","fullscreen":false,"author":{"id":"anarute","title":"anarute","path":"/author/anarute/"},"tags":[{"id":"git","title":"git","path":"/tag/git/"},{"id":"programming","title":"programming","path":"/tag/programming/"}]}},"context":{}}