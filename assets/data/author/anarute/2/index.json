{"hash":"752c6ce69aa6bc2761e11346ad248f842b46c834","data":{"author":{"id":"anarute","title":"anarute","path":"/author/anarute/","belongsTo":{"totalCount":15,"pageInfo":{"totalPages":3,"currentPage":2},"edges":[{"node":{"id":"82338461f4fe3f4c963d8ca004c2949c","title":"Farewell Mozilla - or how it went fast!","datetime":"2016-08-23 14:30:43","path":"/farewell-mozilla-and-outreachy-or-how-it-went-fast/","content":"<p>Wow, how fast can 3 months go? 3 months ago I was extremely happy and anxious about how I was going to manage to become a web dev intern at a <a href=\"http://anarute.com/getting-started-with-taskcluster/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">project I knew nothing about</a> and to really work as a developer in a company that I admire since I'm an internet user.</p>\n<p>Suddenly, here I am preparing the slides for my end-of-internship presentation on next Friday, 26th. It has been a lot of challenges, stress, learning and above all a huge personal growth! Some highlights of what I've learnt:</p>\n<p>✓ What is Taskcluster and how the AWS provisioner works (ok, there's still a lot to learn here).</p>\n<p>✓ What is an Azure entity and how to <a href=\"http://anarute.com/the-amiset-entity/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">create one</a>.</p>\n<p>✓ How to run an application with no GUI interface and how to test things with <a href=\"http://mochajs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mocha</a> - and accept that some things we just <em>can't</em> see, but they work!</p>\n<p>✓ How to build a <a href=\"http://anarute.com/how-to-manage-ami-sets/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React app</a> - I didn't build it from scratch but I definitely learnt a lot here.</p>\n<p>✓ Ask for help soon instead of wasting hours and hours stuck on a small issue (such as a typo).</p>\n<p>✓ Receiving a lot of comments and critics in your PR can actually be a good thing and an opportunity to learn.</p>\n<p>✓ Not be afraid of making mistakes and make <em>stupid</em> questions - there's no such thing as a stupid question.</p>\n<p>✓ How to work in a completely remote team and actually be very productive.</p>\n<p>✓ Got so many great tips from powerful women with the Women in Tech series sessions (thanks to everyone involved to make this happen).</p>\n<p>Beyond all the technical and professional things, I also had a lot of fun! I had the opportunity to go to London and have the experience of what if feels like to be a Mozillian. I met so many awesome people on this path that I can only say thank you!</p>\n<p>Mostly thanks to Dustin, an awesome person who I had the privilege of having as my mentor during this period. Thank you, Dustin, for teaching me so much in so little time! For being a great career advisor, for pushing me when I wasn't confident about myself and for being a friend. Selena, you became a role model for me! I'm lucky I had the chance to meet you and to have you as our team leader. Kristel, it was awesome to meet you and share my challenges and frustrations with you, you are a very strong person, I hope you the best, always. Wander, always ready to help me when I didn't wake up in a good relationship with English words, I'm glad to call you a friend now, for sure we are going to meet a lot here in Brazil. Thanks, John and Eli for the code reviews - I learnt a lot with them. Andrea and Hassan, it was nice to meet you in London, we had a great time! Greg, I wish you the best on your new role on the team, you are already doing a great job! Pete, Jonas and Brian, unfortunately, we didn't have the chance to work much together but I could see how much effort and dedication you all put on Taskcluster, it's really inspiring!</p>\n<p>Thank you, Taskcluster team, it was a pleasure to work with you all. Such a passionate and highly skilled team. I learnt a lot with all of you!</p>\n<p><img src=\"/images/posts/plops-1.jpg\" alt=\"Platform Operations team at London All Hands\"></p>\n<p>PS.: If you are reading this and intend to apply to Outreachy, please do it, you won't regret it! Feel free to ask for help or tips at anarutecvm at gmail dot com.</p>\n","excerpt":"","description":"","tags":[{"id":"outreachy","title":"outreachy","path":"/tag/outreachy/"},{"id":"FOSS","title":"FOSS","path":"/tag/FOSS/"},{"id":"taskcluster","title":"taskcluster","path":"/tag/taskcluster/"},{"id":"Mozilla","title":"Mozilla","path":"/tag/Mozilla/"}]}},{"node":{"id":"b653b66d9ceafa2418e00990ffd4c7bb","title":"How to manage AMI sets","datetime":"2016-07-22 14:30:43","path":"/how-to-manage-ami-sets/","content":"<p>After finishing the first version of the <a href=\"http://anarute.com/the-amiset-entity/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AMI sets entity</a>, now we need to be able to manage them.</p>\n<p>Taskcluster has already a set of tools to manage its components and elements: the <a href=\"https://tools.taskcluster.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">taskcluster tools</a>. In order to manage the AMI sets it was natural to build a tool for that. At first, our main goal is to build a minimal tool that allows us to list all the AMI sets known to the AWS provisioner and to add, edit and delete AMI sets.</p>\n<p>The final shape of an AMI set is this:</p>\n<pre>\"amis\": \n  [\n    {\n      \"region\": \"us-west-1\",\n      \"hvm\": \"ami-111\",\n      \"pv\": \"ami-222\"\n    }\n  ]\n</pre>\n<p>The ideal way to manage this is to allow the user to edit each field separately and check if the AMIs are valid automatically, but for now we are editing it as a JSON object since the back end already checks if the data is valid.</p>\n<p>The taskcluster tools are built with <a href=\"https://facebook.github.io/react/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React</a> and before this project I have never built anything with it. So to start, there's no better way than compare how all the other tools are built. I knew that I needed to figure out how to list the amiSets and how to embed a code editor to be used to edit and create amiSets, so my main examples were the <a href=\"https://tools.taskcluster.net/auth/roles/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Roles tool</a> and the text editor from <a href=\"https://tools.taskcluster.net/task-creator/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Task Creator tool</a>. The editor used in taskcluster tools is <a href=\"http://codemirror.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CodeMirror,</a> a text editor built in javascript for the browser.</p>\n<p>My first step was to build the add amiSet function - after all, without amiSets I cannot test any other endpoint. I started to see progress when apparently no errors showed up when trying to add an amiSet, but to check if it really worked I needed the listing function, then the view function. After making this work, edit and delete were the final ones. A <a href=\"https://github.com/taskcluster/taskcluster-tools/pull/121\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">first version</a> is already being reviewed and hopefully it will be published soon. We still have a lot of improvements to make but it seems good enough to move forward and start to incorporate the amiSets in the AWS provisioner architecture.</p>\n<p>Even after testing the AMI sets entity endpoints in the back end, I wasn't sure if it was really working because I could only see that it passed the tests that I have built, but I couldn't really see the amiSets (<em>and I must say I'm a very visual person</em>) but now with the tool I finally can see them, and it is grateful to see that what you're doing is working! - until it breaks something, of course.</p>\n","excerpt":"","description":"","tags":[{"id":"outreachy","title":"outreachy","path":"/tag/outreachy/"},{"id":"FOSS","title":"FOSS","path":"/tag/FOSS/"},{"id":"taskcluster","title":"taskcluster","path":"/tag/taskcluster/"},{"id":"Mozilla","title":"Mozilla","path":"/tag/Mozilla/"}]}},{"node":{"id":"437cfbeb0ed8dc8f278f64eb59e0357d","title":"The AmiSet Entity","datetime":"2016-06-10 14:30:43","path":"/the-amiset-entity/","content":"<p>Taskcluster is a complex and big project and I'm working on a specific part of it: where we manage the Amazon instances and Machine Images (AMIs). As I've mentioned in my <a href=\"http://anarute.com/getting-started-with-taskcluster/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">last post</a>, my job here starts by creating a new database entity called AMI set, which stores sets of AMIs keyed by region and virtualization type.</p>\n<p>My work during the last two weeks were to understand how the AWS provisioner project is organized and how to create a new entity. Since I was creating something I knew nothing about, start coding seems to be the hardest part because I have no references of things I've done before and I need to learn basically everything. A good advice for newbies would be to chop everything into the smallest parts we can (I think this fits for almost every job and area).</p>\n<p>I took the Worker Type entity as my starting point as suggested by <a href=\"http://code.v.igoro.us/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dustin</a> - my mentor - and wrote the AMI Set entity definition by checking what I could replicate from WorkerType and discarding what didn't make sense. Which ended up with this basic definition:</p>\n<pre>let AmiSet = base.Entity.configure({\n\nproperties: {\n    id: base.Entity.types.String,\n    amis: base.Entity.types.JSON,\n    // Store the date of last modification for this entity\n    lastModified: base.Entity.types.Date,\n  },\n});\n</pre>\n<p>This is a very simple entity and its core part is the <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">amis</code> property, which needs to store the AMIs by region and virtualization type. The thing is, since it is a \"generic\" JSON object we need to decide how the object will be. We have mainly two options:</p>\n<pre>{\n   \"us-west-1\": {\n      \"hvm\": \"ami-111\",\n      \"pv\": \"ami-222\"\n  },\n   \"us-east-1\": {\n      \"hvm\": \"ami-111\",\n      \"pv\": \"ami-222\"\n  }\n}\n</pre>\n<p>Or</p>\n<pre>[\n   {\n      \"region\": \"us-west-1\",\n      \"hvm\": \"ami-111\",\n      \"pv\": \"ami-222\"\n   },\n   {\n      \"region\": \"us-east-1\",\n      \"hvm\": \"ami-111\",\n      \"pv\": \"ami-222\"\n   }\n]\n</pre>\n<p>As <a href=\"https://github.com/taskcluster/aws-provisioner/pull/85#discussion-diff-66091884\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@jhford pointed and @djmitche agrees</a>:</p>\n<blockquote>\n<p>Whether we have a list of objects or a straight mapping is something that you'll have to pick. A list of objects is really nice because you can do really neat things with <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">Array.prototype.map</code> and <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">Array.prototype.filter</code>. A mapping is really nice because it's easier to address the values and it is impossible to have duplicates. Error checking with the object will be easier, but the list of objects is more in line with what we do elsewhere in the provisioner and probably what I'd prefer to see.</p>\n</blockquote>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Here</a> we can see more methods that we can do with <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">Array.prototype</code>. As explained above, probably we'll go with the list of objects option.</p>\n<p>After creating the entity I started adding its create and delete endpoints. The hardest part this time was to understand the functions and specially if I was dealing with instances, classes or properties.</p>\n<p>The thing that made me learn the most were <a href=\"https://github.com/taskcluster/aws-provisioner/pull/85\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the comments</a> Dustin and John made in my Pull Request. It is really helpful to know the things you are doing right or wrong and to know where to go from there. So an important advice here is to start sending patches as soon as possible and don't fear making mistakes - they will happen anyway and we can only learn from them.</p>\n","excerpt":"","description":"","tags":[{"id":"outreachy","title":"outreachy","path":"/tag/outreachy/"},{"id":"FOSS","title":"FOSS","path":"/tag/FOSS/"},{"id":"taskcluster","title":"taskcluster","path":"/tag/taskcluster/"},{"id":"Mozilla","title":"Mozilla","path":"/tag/Mozilla/"}]}},{"node":{"id":"65680ba6ce71a215b99397579f1b63d1","title":"Getting started with TaskCluster","datetime":"2016-05-27 14:30:43","path":"/getting-started-with-taskcluster/","content":"<p>This was my first week working for Mozilla as an <a href=\"https://gnome.org/outreachy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Outreachy</a> intern. The first challenge was to understand Mozilla's culture and how to fit in. We had some meetings about how the program works and to get updates about TaskCluster, the project I'll be working at for the next 3 months. Mozilla has an awesome structure to receive new employees and I felt very welcomed, but that also means a lot of information to process and organize, which includes how to communicate with a fully remote team, setting up accounts, organizing meetings schedule, entering email lists, using Mozilla tools, joining IRC channels, etc.</p>\n<p>After organizing all these new information, it is time to dive into TaskCluster! From <a href=\"https://docs.taskcluster.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Taskcluster documentation</a> we can read:</p>\n<blockquote>\n<p><em>TaskCluster</em> is the task execution framework that supports Mozilla's continuous integration and release processes.</p>\n</blockquote>\n<p>For me it took a while to understand what TaskCluster is and what it is used for, but the process of understanding it is giving me a lot of \"ah-ha\" moments, which is a great feeling that shows me that I'm already learning a lot. For those who want to learn more, <a href=\"https://docs.taskcluster.net/tutorial/what-is-tc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this page</a> says a bit more about TaskCluster.</p>\n<p><strong>My job at TaskCluster:</strong> add robust AMI management to the TaskCluster AWS Provisioner. More details on bug <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1265390\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#1265390</a>.</p>\n<p><strong>My first task:</strong> create AmiSet entity.</p>\n<p>Before I'm able to code anything, I have a bunch of things to do and to understand - the first one is to control the anxiety of wanting to start to code right away...</p>\n<p>I started by understanding the scope and all the parts involved. So a small glossary was very helpful for me:</p>\n<ul>\n<li><a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AMI</a>: \"An Amazon Machine Image (AMI) provides the information required to launch an instance, which is a virtual server in the cloud.\"</li>\n<li><a href=\"https://aws.amazon.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AWS</a>: Amazon Web Services. A suite of cloud computing services offered by Amazon. Its <a href=\"https://aws.amazon.com/start-now/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">website</a> brings a bunch of useful tutorials.</li>\n<li><a href=\"https://github.com/taskcluster/aws-provisioner\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AWS provisioner</a>: \"it is responsible for starting Amazon EC2 instances to perform tasks in the TaskCluster queue. It monitors queue lengths and uses spot bidding to maximize the cost-effectiveness of its resources.\"</li>\n<li>Azure Table Storage: Microsoft Azure Table storage service.</li>\n<li><a href=\"https://aws.amazon.com/ec2/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">EC2</a>: Amazon Elastic Compute Cloud. \"It's a web service that provides resizable compute capacity in the cloud\".</li>\n<li>Entity: in Azure context, \"Tables store data as collections of entities. Entities are similar to rows. An entity has a primary key and a set of properties. A property is a name, typed-value pair, similar to a column.\" TaskCluster team has built a wrapper that is used in the project: <a href=\"https://github.com/taskcluster/azure-entities\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Azure Table Storage Entities</a>.</li>\n<li>AMI Set: \"An AMI Set is a collection of AMIs with a single name (its AMI Set ID). Each AMI in the set is keyed by its virtualization type (<a href=\"http://cloudacademy.com/blog/aws-ami-hvm-vs-pv-paravirtual-amazon/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PV or HVM</a>) and by its AWS region.\"</li>\n</ul>\n<p>Now that everything is much clearer, let's create AmiSet entity :) - uptades next week!</p>\n","excerpt":"","description":"","tags":[{"id":"outreachy","title":"outreachy","path":"/tag/outreachy/"},{"id":"FOSS","title":"FOSS","path":"/tag/FOSS/"},{"id":"taskcluster","title":"taskcluster","path":"/tag/taskcluster/"},{"id":"Mozilla","title":"Mozilla","path":"/tag/Mozilla/"}]}},{"node":{"id":"c72a70a3714733c6bbf9bc1db0a1d6a6","title":"Back to Computing","datetime":"2016-04-26 14:30:43","path":"/back-to-computing/","content":"<p><strong>Muito longo; não li (ml; nl ou tl;dr tupiniquim):</strong> post pessoal sobre meu trajeto na computação e aprovação no programa Outreachy.</p>\n<hr>\n<p>Já sigo um tempo sem postar por aqui nem no <a href=\"http://dicasdefrontend.com.br\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dicas</a> e toda semana fico pensando \"putz, precisava voltar com o blog, preciso mandar email pro dicas\"... mas sento no computador, enrolo, entro em mil <em>vortexes</em> pela internet e quando percebo já está tarde e não tenho mais tempo.</p>\n<p>Soa familiar? Infelizmente esse é um problema muito comum e não existe segredo - pelo menos não descobri ainda, se souber deixa nos comentários, por favor... É muito difícil achar motivação e foco, principalmente quando a gente já trabalha tanto e quer ficar fazendo nada nas horas vagas. Já li muitos conselhos, posts, livros sobre o assunto e sempre chego à conclusão que a solução mesmo é parar de pensar sobre fazer ou não ou quando começar e sentar a bunda na cadeira e começar o que você quer/tem que fazer. A gente costuma gastar muito tempo se dando desculpas do porquê não começar ao invés de gastar esse tempo fazendo o que tem que ser feito.</p>\n<p>Hoje voltei por ter uma novidade muito especial! Pra quem me acompanha desde o início do blog e para os meus amigos próximos, sabem que eu <em>não</em> sou desenvolvedora, embora trabalhe com desenvolvimento de sites desde 2008. Sempre fui mais designer, porém há uns 2~3 anos minha vontade de voltar a estudar computação (fiz curso técnico) tem aumentado. Do ano passado pra cá tive que me virar muito com a plataforma que usamos na <a href=\"http://mupi.me/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mupi</a>, startup da qual sou co-fundadora, e por isso considero que subi alguns níveis na área. De todo modo, continuo com muitas lacunas teóricas e ainda não consigo me definir como desenvolvedora. Ok, tem um pouco de <a href=\"https://medium.com/the-year-of-the-looking-glass/the-imposter-syndrome-9e23e2326d88#.f39b4bfku\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">síndrome de impostora</a> nisso, mas eu chego lá.</p>\n<p>Em março deste ano, decidi aplicar novamente para o programa Outreachy que tem o intuito de inserir mulheres na comunidade de software livre - eu já havia aplicado uma vez em 2013 e não tinha conseguido. Fiquei sabendo que as inscrições estavam abertas faltando 1 semana para encerrar (obrigada <a href=\"http://monicabulgari.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mônica</a> por ter me avisado &#x3C;3) e corri pra me inscrever, já que o processo consiste em preencher a ficha de inscrição e contribuir com um patch pro projeto que eu queria entrar, ou seja, toma um certo tempo. Passada a correria, stress e tempo livre trabalhando nisso, quem entrou num projeto da Mozilla? Yo! <a href=\"https://wiki.gnome.org/Outreachy/2016/MayAugust#Mozilla\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Olha o meu nominho ali.</a></p>\n<p>Ser aprovada no Outreachy tem sido muito importante para eu perceber minha capacidade e comprovar que toda conquista é precedida de muito esforço e dedicação, mas é possível! E essa tem sido minha motivação para desprocrastinar.</p>\n<p>Para as meninas que queiram prestar nas próximas turmas, o processo que segui foi:</p>\n<ul>\n<li>Fuçar no site do <a href=\"https://wiki.gnome.org/Outreachy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Outreachy</a> projetos que fossem do meu interesse (eu me interessei por uns 4, mas é bom focar em 1 porque não há tempo para tentar todos).</li>\n<li>Entrar no canal IRC do projeto escolhido.</li>\n<li>Conversar com os mentores sobre possíveis bugs e patches para enviar e por onde começar.</li>\n<li>Configurar o ambiente de desenvolvimento local para trabalhar nos bugs -> eu tentei trabalhar em dois projetos e <strong>essa é a parte mais difícil e demorada</strong>, pois requer muito tempo para entender como o projeto funciona, instalar todos os requisitos do projeto e fazê-lo rodar como deveria na sua máquina.</li>\n<li>Subir o patch do bug resolvido. -> aqui é importante ter um pouco de familiaridade com git, se você não tem, sugiro começar agora, dá uma olhada nesse <a href=\"http://willianjusten.teachable.com/courses/git-e-github-para-iniciantes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">curso gratuito do Willian Justen.</a> Recomendo super!</li>\n</ul>\n<p>Para vocês veram o tipo de patch que é pedido, eu enviei 2 <em>pull requests</em> (<a href=\"https://github.com/taskcluster/taskcluster-hooks/pull/23\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">esse</a> e <a href=\"https://github.com/taskcluster/taskcluster-auth/pull/54\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">esse</a>) e mandei um <a href=\"https://github.com/mozilla/universal-search/pull/97\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">pequeno fix</a> para um outro projeto da Mozilla.</p>\n<p>Todas as pessoas com quem conversei da Mozilla foram super receptivas e atenciosas, então <strong>não</strong> tenha medo de fazer perguntas, nenhuma pergunta é idiota. Mas claro, recomendo você sempre tentar resolver as coisas antes e fazer as perguntas à medida em que ficar bloqueada e não o contrário, perguntar antes de tentar.</p>\n<p>Bem, próximos passos: dia 23/05 começa o programa e aí que meu trabalho começa de fato. Pretendo continuar compartilhando meu processo e aprendizado por aqui, quem sabe não ajuda mais pessoas a se movimentarem e a deixarem de procrastinar um pouco? Além de incentivar mais meninas a virarem desenvolvedoras e se aventurarem no mundo do software livre.</p>\n","excerpt":"","description":"","tags":[{"id":"outreachy","title":"outreachy","path":"/tag/outreachy/"},{"id":"FOSS","title":"FOSS","path":"/tag/FOSS/"},{"id":"taskcluster","title":"taskcluster","path":"/tag/taskcluster/"}]}},{"node":{"id":"2cd5d0f77f86c2df34af4afac12693c5","title":"Como gravar sua tela em gifs animados no Linux","datetime":"2014-06-14 14:30:43","path":"/como-gravar-sua-tela-em-gifs-animados-no-linux/","content":"<p><strong>UPDATE 26/06/2017:</strong> Encontrei uma opção bem mais interessante, o <a href=\"https://github.com/phw/peek\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Peek</a> que tem uma interface gráfica simples, mas que nos permite selecionar com o mouse a área que será gravada, além de controlar visualmente o início e fim da gravação. Testei no Fedora 25 e rodou tranquilamente, vale a pena dar uma olhada: <a href=\"https://github.com/phw/peek\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/phw/peek</a></p>\n<hr>\n<p>Todo mundo que me conhece sabe que sou fã incondicional de gifs animados. Ultimamente fui surpreendida pela popularização da utilização de gifs em tutoriais e documentações técnicas, algo que eu ainda não havia pensado sobre mas que achei genial pela simplicidade e eficiência dessa prática. Além de tornar documentações e tutoriais muito mais envolvente. Veja um exemplo que estamos usando na <a href=\"http://escolamupi.com.br\" title=\"Escola Mupi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Escola Mupi</a> (<a href=\"http://line25.com/articles/creative-uses-animated-gifs-present-ui-designs\" title=\"Exemplos de gifs em UX\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">aqui</a> tem uns legais também):</p>\n<p><img src=\"/images/posts/doc-titulo.gif\"></p>\n<p>Existem várias formas de se fazer isso. Você pode, por exemplo, gravar sua tela em video e depois editar exportando para gif (o Adobe Premiere faz isso, Camtasia também, e existem alguns programas só para este fim). Mas como uso Linux, precisei aprender como fazer isso sem esses programas que só rodam no Windows ou Mac OS, e encontrei o Byzanz, que você pode ver seu <a href=\"https://github.com/GNOME/byzanz\" title=\"Código Byzanz\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">código aqui</a>.<br>\nO Byzanz permite gravar a tela diretamente em um gif animado. Como não encontrei muitas informações sobre ele (parece que seu site está fora do ar), resolvi criar esse tutorial para ensinar como utilizá-lo, já que o achei super simples e soluciona muito bem essa necessidade.<br>\n<em>Spoiler</em>: é tudo pela linha de comando então se você, assim como eu, tem muito apego visual, recomendo um pouquinho de paciência que no fim das contas é simples de usar e é possível que você vicie e queira gravar tudo! :)</p>\n<p><strong>1 - Instalar o Byzanz</strong> Abra o seu terminal e execute os passos abaixo para instalar o Byzanz.<br>\nSe você usa Fedora e Gnome, o byzanz já está no repositório do Fedora então basta instalar:</p>\n<pre>$ sudo yum install byzanz</pre>\n<p>No Ubuntu 14.04:</p>\n<pre>$ sudo add-apt-repository ppa:fossfreedom/byzanz\n$ sudo apt-get update\n$ sudo apt-get install byzanz\n</pre>\n<p><strong>2 -</strong> [Opcional] <strong>Instalar o Wmctrl</strong><br>\nEsse passo é mais uma dica, ele não é necessário. Mas através do <a href=\"http://tomas.styblo.name/wmctrl/\" title=\"Wmctrl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Wmctrl</a> (um comando que permite você gerenciar suas janelas) a gente consegue experimentar tamanhos e posicionamentos de janelas para definir a área a ser gravada antes de usar o Byzanz.<br>\nPara instalar é igual ao passo 1:</p>\n<ul>\n<li>Para Fedora:</li>\n</ul>\n<pre>$ sudo yum install wmctrl</pre>\n<ul>\n<li>Para Ubuntu:</li>\n</ul>\n<pre>$ sudo apt-get install wmctrl</pre>\n<p>Se não achar o Wmctrl, leia <a href=\"http://www.installion.co.uk/ubuntu/saucy/universe/w/wmctrl/pt/install.html\" title=\"Instalando o Wmdctrl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">este tutorial</a>.</p>\n<p><strong>3 - Definindo o tamanho da janela que você quer gravar.</strong><br>\nCom o Wmctrl fica bem mais fácil essa etapa, por isso o passo dois. A linha abaixo está dizendo para posicionar a janela atual (no caso sua janela do terminal) se posicionar 500 pixels à direita (eixo x), 100 pixels abaixo (eixo y), com a largura (width) de 800 pixels e altura de 600 (altura) pixels. A opção <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">-e</code> significa que ele vai redimensionar a janela com os parâmetros definidos.</p>\n<pre>$ wmctrl -r :ACTIVE: -e 0,500,100,800,600</pre>\n<p>E é só isso que precisamos do Wmctrl, se quiser ver mais opções é só ver o help do Wmctrl com o comando <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">$ wmctrl --help</code>. Agora você pode ficar experimentando os valores até achar o que quer:<br>\n<img src=\"/images/posts/terminal.gif\" alt=\"terminal\"></p>\n<p><strong>4 - Gravando a tela com o byzanz</strong><br>\nCom os valores de tela definido, você posiciona a janela que vai ser gravada, seu navegador por exemplo, no local que ficou sua janela do terminal do passo três.<br>\nO uso do byzanz usa os seguintes parâmetros: <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">byzanz-record [opções] nomedoarquivo.gif</code>. No caso do meu exemplo usei o comando abaixo, onde <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">-d 10</code> se refere à duração da gravação e <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">-c</code> que vai gravar o cursor:</p>\n<pre>$ byzanz-record -d 10 -c --x=500 --y=100 --width=800 --height=600 terminal.gif</pre>\n<p>Para conferir o resultado é só ir na pasta onde você salvou e abrir o gif no seu navegador :)<br>\nPara mais opções do byzanz basta acessar seu manual: <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">byzanz-record --help</code></p>\n<p>E seu gif está pronto! Simples, não? Eu particularmente achei muito melhor do que depender de editores de videos pesados que demoram pra renderizar e são difíceis de mexer.<br>\nAgora é experimentar, boas gravações!<br>\nAh, e se for gravar pra web só cuidado com o tamanho final dos gifs, afinal cada frame é uma imagem que podem custar caro pra sua performance.</p>\n","excerpt":"","description":"","tags":[{"id":"gifs","title":"gifs","path":"/tag/gifs/"},{"id":"linux","title":"linux","path":"/tag/linux/"},{"id":"tools","title":"tools","path":"/tag/tools/"}]}}]}}},"context":{}}