{"data":{"posts":{"totalCount":11,"pageInfo":{"totalPages":2,"currentPage":2},"edges":[{"node":{"id":"c72a70a3714733c6bbf9bc1db0a1d6a6","title":"Back to Computing","datetime":"2016-04-26 14:30:43","content":"<p><strong>Muito longo; não li (ml; nl ou tl;dr tupiniquim):</strong> post pessoal sobre meu trajeto na computação e aprovação no programa Outreachy.</p>\n<hr>\n<p>Já sigo um tempo sem postar por aqui nem no <a href=\"http://dicasdefrontend.com.br\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dicas</a> e toda semana fico pensando \"putz, precisava voltar com o blog, preciso mandar email pro dicas\"... mas sento no computador, enrolo, entro em mil <em>vortexes</em> pela internet e quando percebo já está tarde e não tenho mais tempo.</p>\n<p>Soa familiar? Infelizmente esse é um problema muito comum e não existe segredo - pelo menos não descobri ainda, se souber deixa nos comentários, por favor... É muito difícil achar motivação e foco, principalmente quando a gente já trabalha tanto e quer ficar fazendo nada nas horas vagas. Já li muitos conselhos, posts, livros sobre o assunto e sempre chego à conclusão que a solução mesmo é parar de pensar sobre fazer ou não ou quando começar e sentar a bunda na cadeira e começar o que você quer/tem que fazer. A gente costuma gastar muito tempo se dando desculpas do porquê não começar ao invés de gastar esse tempo fazendo o que tem que ser feito.</p>\n<p>Hoje voltei por ter uma novidade muito especial! Pra quem me acompanha desde o início do blog e para os meus amigos próximos, sabem que eu <em>não</em> sou desenvolvedora, embora trabalhe com desenvolvimento de sites desde 2008. Sempre fui mais designer, porém há uns 2~3 anos minha vontade de voltar a estudar computação (fiz curso técnico) tem aumentado. Do ano passado pra cá tive que me virar muito com a plataforma que usamos na <a href=\"http://mupi.me/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mupi</a>, startup da qual sou co-fundadora, e por isso considero que subi alguns níveis na área. De todo modo, continuo com muitas lacunas teóricas e ainda não consigo me definir como desenvolvedora. Ok, tem um pouco de <a href=\"https://medium.com/the-year-of-the-looking-glass/the-imposter-syndrome-9e23e2326d88#.f39b4bfku\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">síndrome de impostora</a> nisso, mas eu chego lá.</p>\n<p>Em março deste ano, decidi aplicar novamente para o programa Outreachy que tem o intuito de inserir mulheres na comunidade de software livre - eu já havia aplicado uma vez em 2013 e não tinha conseguido. Fiquei sabendo que as inscrições estavam abertas faltando 1 semana para encerrar (obrigada <a href=\"http://monicabulgari.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mônica</a> por ter me avisado &#x3C;3) e corri pra me inscrever, já que o processo consiste em preencher a ficha de inscrição e contribuir com um patch pro projeto que eu queria entrar, ou seja, toma um certo tempo. Passada a correria, stress e tempo livre trabalhando nisso, quem entrou num projeto da Mozilla? Yo! <a href=\"https://wiki.gnome.org/Outreachy/2016/MayAugust#Mozilla\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Olha o meu nominho ali.</a></p>\n<p>Ser aprovada no Outreachy tem sido muito importante para eu perceber minha capacidade e comprovar que toda conquista é precedida de muito esforço e dedicação, mas é possível! E essa tem sido minha motivação para desprocrastinar.</p>\n<p>Para as meninas que queiram prestar nas próximas turmas, o processo que segui foi:</p>\n<ul>\n<li>Fuçar no site do <a href=\"https://wiki.gnome.org/Outreachy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Outreachy</a> projetos que fossem do meu interesse (eu me interessei por uns 4, mas é bom focar em 1 porque não há tempo para tentar todos).</li>\n<li>Entrar no canal IRC do projeto escolhido.</li>\n<li>Conversar com os mentores sobre possíveis bugs e patches para enviar e por onde começar.</li>\n<li>Configurar o ambiente de desenvolvimento local para trabalhar nos bugs -> eu tentei trabalhar em dois projetos e <strong>essa é a parte mais difícil e demorada</strong>, pois requer muito tempo para entender como o projeto funciona, instalar todos os requisitos do projeto e fazê-lo rodar como deveria na sua máquina.</li>\n<li>Subir o patch do bug resolvido. -> aqui é importante ter um pouco de familiaridade com git, se você não tem, sugiro começar agora, dá uma olhada nesse <a href=\"http://willianjusten.teachable.com/courses/git-e-github-para-iniciantes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">curso gratuito do Willian Justen.</a> Recomendo super!</li>\n</ul>\n<p>Para vocês veram o tipo de patch que é pedido, eu enviei 2 <em>pull requests</em> (<a href=\"https://github.com/taskcluster/taskcluster-hooks/pull/23\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">esse</a> e <a href=\"https://github.com/taskcluster/taskcluster-auth/pull/54\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">esse</a>) e mandei um <a href=\"https://github.com/mozilla/universal-search/pull/97\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">pequeno fix</a> para um outro projeto da Mozilla.</p>\n<p>Todas as pessoas com quem conversei da Mozilla foram super receptivas e atenciosas, então <strong>não</strong> tenha medo de fazer perguntas, nenhuma pergunta é idiota. Mas claro, recomendo você sempre tentar resolver as coisas antes e fazer as perguntas à medida em que ficar bloqueada e não o contrário, perguntar antes de tentar.</p>\n<p>Bem, próximos passos: dia 23/05 começa o programa e aí que meu trabalho começa de fato. Pretendo continuar compartilhando meu processo e aprendizado por aqui, quem sabe não ajuda mais pessoas a se movimentarem e a deixarem de procrastinar um pouco? Além de incentivar mais meninas a virarem desenvolvedoras e se aventurarem no mundo do software livre.</p>\n","excerpt":"","description":"","path":"/back-to-computing","cover":"","tags":[{"id":"outreachy","title":"outreachy","path":"/tag/outreachy"},{"id":"FOSS","title":"FOSS","path":"/tag/FOSS"},{"id":"taskcluster","title":"taskcluster","path":"/tag/taskcluster"}],"author":{"id":"anarute","title":"anarute","path":"/author/anarute"}}},{"node":{"id":"2cd5d0f77f86c2df34af4afac12693c5","title":"Como gravar sua tela em gifs animados no Linux","datetime":"2014-06-14 14:30:43","content":"<p><strong>UPDATE 26/06/2017:</strong> Encontrei uma opção bem mais interessante, o <a href=\"https://github.com/phw/peek\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Peek</a> que tem uma interface gráfica simples, mas que nos permite selecionar com o mouse a área que será gravada, além de controlar visualmente o início e fim da gravação. Testei no Fedora 25 e rodou tranquilamente, vale a pena dar uma olhada: <a href=\"https://github.com/phw/peek\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/phw/peek</a></p>\n<hr>\n<p>Todo mundo que me conhece sabe que sou fã incondicional de gifs animados. Ultimamente fui surpreendida pela popularização da utilização de gifs em tutoriais e documentações técnicas, algo que eu ainda não havia pensado sobre mas que achei genial pela simplicidade e eficiência dessa prática. Além de tornar documentações e tutoriais muito mais envolvente. Veja um exemplo que estamos usando na <a href=\"http://escolamupi.com.br\" title=\"Escola Mupi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Escola Mupi</a> (<a href=\"http://line25.com/articles/creative-uses-animated-gifs-present-ui-designs\" title=\"Exemplos de gifs em UX\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">aqui</a> tem uns legais também):</p>\n<p><img src=\"/images/posts/doc-titulo.gif\"></p>\n<p>Existem várias formas de se fazer isso. Você pode, por exemplo, gravar sua tela em video e depois editar exportando para gif (o Adobe Premiere faz isso, Camtasia também, e existem alguns programas só para este fim). Mas como uso Linux, precisei aprender como fazer isso sem esses programas que só rodam no Windows ou Mac OS, e encontrei o Byzanz, que você pode ver seu <a href=\"https://github.com/GNOME/byzanz\" title=\"Código Byzanz\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">código aqui</a>.<br>\nO Byzanz permite gravar a tela diretamente em um gif animado. Como não encontrei muitas informações sobre ele (parece que seu site está fora do ar), resolvi criar esse tutorial para ensinar como utilizá-lo, já que o achei super simples e soluciona muito bem essa necessidade.<br>\n<em>Spoiler</em>: é tudo pela linha de comando então se você, assim como eu, tem muito apego visual, recomendo um pouquinho de paciência que no fim das contas é simples de usar e é possível que você vicie e queira gravar tudo! :)</p>\n<p><strong>1 - Instalar o Byzanz</strong> Abra o seu terminal e execute os passos abaixo para instalar o Byzanz.<br>\nSe você usa Fedora e Gnome, o byzanz já está no repositório do Fedora então basta instalar:</p>\n<pre>$ sudo yum install byzanz</pre>\n<p>No Ubuntu 14.04:</p>\n<pre>$ sudo add-apt-repository ppa:fossfreedom/byzanz\n$ sudo apt-get update\n$ sudo apt-get install byzanz\n</pre>\n<p><strong>2 -</strong> [Opcional] <strong>Instalar o Wmctrl</strong><br>\nEsse passo é mais uma dica, ele não é necessário. Mas através do <a href=\"http://tomas.styblo.name/wmctrl/\" title=\"Wmctrl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Wmctrl</a> (um comando que permite você gerenciar suas janelas) a gente consegue experimentar tamanhos e posicionamentos de janelas para definir a área a ser gravada antes de usar o Byzanz.<br>\nPara instalar é igual ao passo 1:</p>\n<ul>\n<li>Para Fedora:</li>\n</ul>\n<pre>$ sudo yum install wmctrl</pre>\n<ul>\n<li>Para Ubuntu:</li>\n</ul>\n<pre>$ sudo apt-get install wmctrl</pre>\n<p>Se não achar o Wmctrl, leia <a href=\"http://www.installion.co.uk/ubuntu/saucy/universe/w/wmctrl/pt/install.html\" title=\"Instalando o Wmdctrl\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">este tutorial</a>.</p>\n<p><strong>3 - Definindo o tamanho da janela que você quer gravar.</strong><br>\nCom o Wmctrl fica bem mais fácil essa etapa, por isso o passo dois. A linha abaixo está dizendo para posicionar a janela atual (no caso sua janela do terminal) se posicionar 500 pixels à direita (eixo x), 100 pixels abaixo (eixo y), com a largura (width) de 800 pixels e altura de 600 (altura) pixels. A opção <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">-e</code> significa que ele vai redimensionar a janela com os parâmetros definidos.</p>\n<pre>$ wmctrl -r :ACTIVE: -e 0,500,100,800,600</pre>\n<p>E é só isso que precisamos do Wmctrl, se quiser ver mais opções é só ver o help do Wmctrl com o comando <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">$ wmctrl --help</code>. Agora você pode ficar experimentando os valores até achar o que quer:<br>\n<img src=\"/images/posts/terminal.gif\" alt=\"terminal\"></p>\n<p><strong>4 - Gravando a tela com o byzanz</strong><br>\nCom os valores de tela definido, você posiciona a janela que vai ser gravada, seu navegador por exemplo, no local que ficou sua janela do terminal do passo três.<br>\nO uso do byzanz usa os seguintes parâmetros: <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">byzanz-record [opções] nomedoarquivo.gif</code>. No caso do meu exemplo usei o comando abaixo, onde <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">-d 10</code> se refere à duração da gravação e <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">-c</code> que vai gravar o cursor:</p>\n<pre>$ byzanz-record -d 10 -c --x=500 --y=100 --width=800 --height=600 terminal.gif</pre>\n<p>Para conferir o resultado é só ir na pasta onde você salvou e abrir o gif no seu navegador :)<br>\nPara mais opções do byzanz basta acessar seu manual: <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">byzanz-record --help</code></p>\n<p>E seu gif está pronto! Simples, não? Eu particularmente achei muito melhor do que depender de editores de videos pesados que demoram pra renderizar e são difíceis de mexer.<br>\nAgora é experimentar, boas gravações!<br>\nAh, e se for gravar pra web só cuidado com o tamanho final dos gifs, afinal cada frame é uma imagem que podem custar caro pra sua performance.</p>\n","excerpt":"","description":"","path":"/como-gravar-sua-tela-em-gifs-animados-no-linux","cover":"","tags":[{"id":"gifs","title":"gifs","path":"/tag/gifs"},{"id":"linux","title":"linux","path":"/tag/linux"},{"id":"tools","title":"tools","path":"/tag/tools"}],"author":{"id":"anarute","title":"anarute","path":"/author/anarute"}}},{"node":{"id":"43349333e39bb6dc74e2be0b1ac4026b","title":"[tradução] Wireframe, protótipo e mockup – Qual a diferença?","datetime":"2014-04-18 14:30:43","content":"<blockquote>\n<p>Uma das etapas mais fundamentais durante o processo de desenvolvimento de um produto, no nosso caso, web sites ou aplicativos, é a geração de ideias e protótipos. Após compreender o problema que temos que resolver, independente de sua complexidade, é necessário gerar ideias de como será sua solução para então poder implementá-la. Existem várias formas de representar uma ideia e projetar sua solução. O artigo abaixo explica a diferença entre mockups, wireframes e protótipos e é uma tradução livre que fiz do post feito por <a href=\"https://twitter.com/marcintreder\" title=\"Marci Treder\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Marcin Treder</a> no Design Modo. O original pode ser <a href=\"http://designmodo.com/wireframing-prototyping-mockuping/\" title=\"http://designmodo.com/wireframing-prototyping-mockuping/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lido aqui</a>.</p>\n</blockquote>\n<p>\"Alguns anos atrás me dei conta de que muitos amigos meus de TI, não-designers, usam nomenclaturas de design deliberadamente como se fossem sinônimos. Eles assumem que wireframes, protótipos e mockups são exatamente a mesma coisa – um rascunho meio cinza, com várias formas retangulares que representam uma ideia engenhosa.</p>\n<p>O problema com essa visão simplificada é que eles nunca sabem o que esperar do trabalho de um designer de <em>User Experience</em> e muitas vezes ficam confusos. \"Por que raios isso não é clicável?\", \"Bem, eu não sabia que eu deveria clicar aqui...\" - esses são comentários típicos em projetos de UX.</p>\n<p>Confundir wireframes com protótipos é como assumir que uma planta de uma casa e aquelas casas modelo decoradas para amostra são a mesma coisa.</p>\n<p>Embora você provavelmente queira morar numa casa modelo (você sabe, ela é bonita e supostamente mostra o quão legais são as casas na região), você não pode contar com uma estadia confortável numa planta de imóvel – é apenas uma folha de papel.</p>\n<p>Uma casa de showroom e uma planta são diferentes formas de comunicação na área de arquitetura:</p>\n<ul>\n<li>uma planta serve como um plano de construção e deveria especificar como o prédio/casa deveriam ser construídos</li>\n<li>uma casa modelo funciona como um test drive para futuros moradores</li>\n</ul>\n<p>A mesma distinção pode ser feita com wireframes, protótipos e mockups. Eles aparentam diferente, comunicam algo diferente e servem para propósitos diferentes.</p>\n<p>Porém, uma casa modelo e uma planta tem uma coisa em comum: as duas são representações do produto final - uma casa real. E novamente, o mesmo tratamento pode ser aplicado aos wireframes, protótipos e mockups: todos eles são formas de representação do produto final.</p>\n<p>Acredite ou não, a diferença entre um protótipo, um wireframe e um mockup é sempre uma das primeiras coisas que tento ensinar aos membros do meu time de design de UX.<br>\nSim, esse assunto é realmente importante.</p>\n<p>Vamos discutir wireframes, protótipos e mockups em detalhe, assim você poderá entender em quais situações utilizar cada um.</p>\n<h2 id=\"wireframe\"><a href=\"#wireframe\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Wireframe</h2>\n<p><strong>1. O que é um wireframe?</strong></p>\n<p><strong>Um wireframe é uma representação de baixa fidelidade de um design.</strong> Ele deve mostrar claramente:</p>\n<ul>\n<li>os principais grupos de conteúdo (<strong>o quê?</strong>)</li>\n<li>a estrutura da informação (<strong>onde?</strong>)</li>\n<li>uma descrição e visualização básica da interface e interação do usuário (<strong>como?</strong>)</li>\n</ul>\n<p>Wireframes não são apenas caixas meio sem sentido desenhadas em p&#x26;b, embora pareçam exatamente isso. Considere-os como <strong>o esqueleto do seu design</strong> e lembre-se que os wireframes devem conter a representação de todas as partes importantes do produto final.</p>\n<p><img src=\"/images/posts/UXPin_DM1.jpg\" alt=\"UXPin_DM1\"></p>\n<p>“Representação” é um termo crucial aqui, que te ajuda a encontrar a fidelidade certa – e equilíbrio de velocidade de desenvolvimento. Você não pode mergulhar em muitos detalhes, mas, por outro lado, você precisa criar uma representação sólida do produto final que não sentirá falta de nenhuma parte importante. Você está definindo um caminho para todo o projeto e para as pessoas com quem você trabalha (desenvolvedores, designers gráficos, redatores, gestores de projetos – todos eles precisam de wireframes bem-feitos). Na verdade você está criando o mapa de uma cidade. Cada rua é representada no mapa, porém de uma forma bastante simplificada. Você consegue sentir a arquitetura da cidade ao olhar um mapa, mas não pode ver sua beleza.</p>\n<p>Wireframes devem ser criados num espaço de tempo curto: a maior parte do tempo deve ser gasta na comunicação com seus colegas e… pensando. A simples atividade de criar o wireframe deve ser realmente muito rápida.</p>\n<p>A visualização de um wireframe se dá esteticamente, mas de uma forma bastante simplificada. Preto e branco são as cores típicas que você irá usar (você pode adicionar o azul para especificar os links).</p>\n<p>Se algumas escolhas tomarem bastante tempo (por exemplo a escolha de ícones, subir imagens), você deve representá-las de uma forma primária (ex. utilizando espaços reservados para certos elementos – retângulos vazios com um “X” no meio para imagens acompanhados de uma descrição). Nós costumamos chamar wireframes de “entregáveis de baixa fidelidade” (lo-fi).</p>\n<p>Lembre-se: um wireframe bem-feito deve comunicar o design de uma maneira cristalina e definir o caminho a ser seguido por todo o time.</p>\n<p><strong>2. Quando utilizar wireframes.</strong></p>\n<p>Wireframes normalmente são utilizados como parte da documentação de um projeto. Como eles são estáticos e congelam a interação em um ponto específico no tempo, eles devem ser acompanhados de descrições por escrito (de pequenas anotações explicando as interações até documentações técnicas mais complexas, quando necessário).</p>\n<p>No entanto, eles também podem ser utilizados em situações mais informais. Já que são simples e rápidos de serem feitos, servem também como rascunhos claros para serem usados na comunicação interna do time. Se os desenvolvedores perguntarem como algo deve ser feito, a resposta pode ser dada com a criação rápida de um wireframe.</p>\n<p><em>Considere isso: a <a href=\"http://uxpin.com/\" title=\"UXpin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">UXPin</a> é uma start-up com ciclos de desenvolvimentos realmente rápidos (releases a cada dois dias). Nós utilizamos wireframes para a visualização rápida de tarefas (até as pequenas!). Isso elimina desentendimentos e é realmente barato.</em></p>\n<p>Wireframes são dificilmente utilizados como material de teste, ainda que possam ajudar a coletar feedback inicial, estilo guerrilha; ou como uma pesquisa na qual você não se importe muito sobre metodologia, mas sim em conseguir rápidos insights.</p>\n<p>Wireframes inseridos no contexto do processo completo do design podem ser surpreendentemente eficazes e, ainda que nos últimos anos tenham ganhado má reputação, continuam indispensáveis na fase inicial de projetos complexos.</p>\n<h2 id=\"protótipo\"><a href=\"#prot%C3%B3tipo\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Protótipo</h2>\n<p><strong>1. O que é um protótipo?</strong></p>\n<p>Um protótipo, muitas vezes confundido com um wireframe, é uma representação de média a alta fidelidade do produto final e que simula a interface de interação do usuário. Ele deve possibilitar ao usuário:</p>\n<ul>\n<li>experimentar o conteúdo e as interações da interface</li>\n<li>testar as principais interações de forma similar ao produto final</li>\n</ul>\n<p>Um protótipo é uma simulação da interação final entre o usuário e a interface. Pode não parecer exatamente com o produto final, mas deve ser bastante similar (definitivamente não é um coisa cinzenta e com cara de rascunho, como são os wireframes). As interações devem ser moldadas com cuidado e apresentar uma semelhança significante com a experiência que o usuário terá no produto final. A interdependência entre a interface e o funcionamento do backend é frequentemente omitida para reduzir custos e acelerar os ciclos de desenvolvimento.<br>\n<strong>2. Quando utilizar um protótipo.</strong></p>\n<p><img src=\"/images/posts/UXPin_DM2.jpg\" alt=\"UXPin_DM2\"></p>\n<p>Protótipos são utilizados em seu máximo potencial nos testes de usuário. A simulação das interações finais geram um ótimo material para testar a usabilidade da interface antes do desenvolvimento iniciar de fato.</p>\n<p>Os protótipos normalmente não são a melhor forma de documentação, já que exigem do “leitor” um certo esforço para entender a interface. Por outro lado, um protótipo é a forma mais engajante de documentação do design, uma vez que a interface é palpável e direta.</p>\n<p>Lembre-se que criar protótipos pode ser caro e consumir bastante tempo. Uma sugestão é criar protótipos que possam ser utilizados no desenvolvimento (sim, isso significa que você deve saber programar um pouco de HTML e CSS). Isso é especificamente eficaz em projetos relativamente simples.</p>\n<p>Feita de forma correta e combinada com testes de usuário, a criação de protótipos consegue pagar seu custo.</p>\n<h2 id=\"mockup-mock-up\"><a href=\"#mockup-mock-up\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Mockup (mock-up)</h2>\n<p><strong>1. O que é um mockup?</strong></p>\n<p>Um mockup é uma representação estática de média a alta fidelidade de um design. Muitas vezes um mockup é um rascunho bem próximo do design final do produto, ou até o próprio design visual do produto final. Um mockup bem feito:</p>\n<ul>\n<li>representa a estrutura da informação, visualiza o conteúdo e demonstra as principais funcionalidades de uma forma estática</li>\n<li>estimula as pessoas a realmente revisarem a parte visual do projeto</li>\n</ul>\n<p>Mockups são muitas vezes confundidos com wireframes, por causa dos nomes de certas empresas de software.<br>\n<strong>2. Quando utilizar um mockup.</strong></p>\n<p><img src=\"/images/posts/UXPin_DM3.jpg\" alt=\"UXPin_DM3\"></p>\n<p>Os mockups são particularmente úteis quando você quer vender a ideia do produto antes dele estar pronto para seu público estratégico (stakeholders). Graças a sua natureza visual, mockups não possuem a resistência dos entregáveis de baixa fidelidade (wireframes) e são bem mais rápidos de criar do que protótipos. Eles são ótimos coletores de feedback e, se inseridos no contexto geral do processo de criação do design, podem criar um bom capítulo da documentação.</p>\n<h2 id=\"resumo\"><a href=\"#resumo\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Resumo</h2>\n<table class=\"tg\">\n<tbody>\n<tr>\n<th>Representação</th>\n<th>Fidelidade</th>\n<th>Custo</th>\n<th>Uso</th>\n<th>Características</th>\n</tr>\n<tr>\n<td>Wireframe</td>\n<td>baixa</td>\n<td>$</td>\n<td>Documentação, comunicação rápida</td>\n<td>Rascunho, representação preta e branca da interface</td>\n</tr>\n<tr>\n<td>Protótipo</td>\n<td>média a alta</td>\n<td>$</td>\n<td>Teste de usabilidade, esqueleto reutilizável para o desenvolvimento da interface</td>\n<td>Interativo</td>\n</tr>\n<tr>\n<td>Mockup</td>\n<td>média a alta</td>\n<td>$</td>\n<td>Coletar feedback e conseguir vender a ideia do produto</td>\n<td>Visualização estática</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"por-onde-começar\"><a href=\"#por-onde-come%C3%A7ar\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Por onde começar?</h2>\n<p>Antes de escolher um meio de comunicação do processo de design você precisa:</p>\n<ul>\n<li>especificar o problema que você está tentando resolver</li>\n<li>entender o seu público-alvo</li>\n<li>dar uma olhada no que os concorrentes tem feito na área</li>\n<li>definir os requisitos gerais do produtos</li>\n</ul>\n<p>Isso é o mínimo. Agora pense qual entregável será mais apropriado para você. Considere seu produto e seu time. O que funcionará melhor para vocês? Uma documentação formal ou rascunhos mais informais e discussões presenciais? Você tem tempo e dinheiro para uma pesquisa mais consistente de usabilidade ou vai apenas a um café local desenhar alguns rascunhos a mão para os seus futuros clientes?</p>\n<p>Quais habilidades você possui? Você sabe programar?</p>\n<p>Olhar para si mesmo(a), seu time e seu projeto deve lhe guiar pelo processo de escolher o melhor entregável.</p>\n<p>Você pode, é claro, criar todos e... na maioria dos casos você vai! Não tenha receio de dar esse passo. Os três fazem sentido e, se forem bem executados, podem te levar a um ótimo produto final.\"</p>\n<p><em>Artigo original: <a href=\"http://designmodo.com/wireframing-prototyping-mockuping/\" title=\"Wireframing, prototyping and mockuping\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://designmodo.com/wireframing-prototyping-mockuping/</a></em></p>\n","excerpt":"","description":"Tradução livre do artigo de Marcin Trader sobre as diferenças enrte wireframe, protótipo e mockup","path":"/wireframe-prototipo-e-mockup-qual-a-diferenca","cover":"","tags":[{"id":"ux","title":"ux","path":"/tag/ux"},{"id":"web design","title":"web design","path":"/tag/web%20design"}],"author":{"id":"anarute","title":"anarute","path":"/author/anarute"}}},{"node":{"id":"5a7842294d21f6e3854895ccd461dc11","title":"Preciso modificar um commit passado, como faz?","datetime":"2014-03-23 14:30:43","content":"<blockquote>\n<p>Nas últimas duas semanas tenho tido um intensivão de aprendizado de git por causa da reformulação do site da <a href=\"http://mupi.me\" title=\"Escola Mupi\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Escola Mupi</a>. O projeto usa como base uma plataforma que se chama <a href=\"https://github.com/hacklabr/timtec\" title=\"Timtec\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Timtec</a>, mas que ainda está sendo desenvolvida, logo muitos bugs, features faltando e muitos <em>merge conflicts</em>... Eu que ainda estou descobrindo as magias do git, tenho uma relacionamento de amor e ódio, pois já fiz muita besteira e perdi muitas horas de trabalho por não saber como ele funciona direito, assim como ele já me salvou muitas vezes &#x3C;3</p>\n<p>Esses dias, precisei adicionar alguns arquivos num commit antigo para manter minha árvore organizada e coerente. Para isso, <a href=\"http://padovan.org\" title=\"Gustavo Padovan\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@padovan</a> me ensinou a resolver esse problema usando <strong>fixup</strong> + <strong>rebase interactive</strong> [que eu particularmente achei incrível]. Vamos lá:</p>\n</blockquote>\n<p>Antes de iniciar, você precisa copiar um pedaço inicial do hash do commit que você deseja modificar. O hash é o código de identificação do commit, exemplo: 636bf2643e67bf34f67691333b916e292571a469. No caso os 6 primeiros caracteres já são suficientes. Você pode achar o hash com o comando <span style=\"color: #800000;\"><code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git log</code></span>.</p>\n<p>Tendo isso copiado, deve-se fazer um \"fake\" commit. Ou seja, criamos um commit que servirá apenas como um repositório temporário das novas modificações que serão acrescentadas ao commit desejado. Para isso usamos o seguinte comando:</p>\n<pre>$ git commit --fixup=636bf26</pre>\n<p>Isso cria um commit com a mensagem \"fixup! + msg do commit selecionado\". Isso ajuda a identificar que esse não é um commit convencional, mas que precisa ser \"fixed up\". Feito isso, agora vem a magia: <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git rebase --interactive</code> ou <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git rebase -i</code>. O rebase interactive dá muito mais flexibilidade para modificar os commits. Para usá-lo precisamos indicar a quantidade de últimos commits a serem mostrados a partir do HEAD. No meu caso, os 4 últimos commits foram suficientes:</p>\n<pre>$ git rebase -i HEAD~4</pre>\n<p>que nos dá no editor padrão do terminal a quantidade indicada de commits em ordem do mais antigo ao mais novo, assim como todas as opções do <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">rebase interactive</code>. Nesse exemplo só vamos utilizar fixup (note que existem outras opções pra rebase interativo que podem ser muito úteis em outras situações):</p>\n<p><img src=\"http://i.imgur.com/U0abklc.png\"></p>\n<p>Para a magia acontecer, é preciso escrever <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">f</code> no lugar de <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">pick</code> na frente do commit de fixup e modificar a ordem dos commits, colocando-o logo abaixo do commit desejado:</p>\n<p><img src=\"http://i.imgur.com/qb8mwCx.png\"></p>\n<p>Agora é só salvar e voi lá! o \"fake\" commit é fundido no commit de cima =) é só dar um checada se deu tudo certo com git log.</p>\n<p>UPDATE: Como pode se ver na primeira imagem, existem outras opções bem interessantes para se usar no rebase interativo, como o <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">reword</code>, que permite modificar apenas a mensagem de algum commit, e o <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">squash</code> que permite juntar dois ou mais commits em um só. Para quem lê em inglês, sugiro <a href=\"https://help.github.com/articles/interactive-rebase\" title=\"Interactive rebase\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">este artigo</a> do github a respeito e dou um quote de alerta (tradução livre minha): \"É considerada uma má prática dar rebase em commits que já foram submetidos ao repositório remoto. Ao fazer isso, você poderá invocar a ira dos deuses do git\".</p>\n<p>obs.: Para modificar o último commit feito, <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git commit --amend</code> é a melhor opção, já que \"reabre\" o último commit para edição.</p>\n","excerpt":"","description":"Aprenda a usar rebase interativo para modificar um commit do passado","path":"/preciso-modificar-um-commit-passado-como-faz","cover":"","tags":[{"id":"git","title":"git","path":"/tag/git"}],"author":{"id":"anarute","title":"anarute","path":"/author/anarute"}}},{"node":{"id":"c1e2088a18deec6f70842f354c8c2293","title":"Learn how to code Javascript by playing a game!","datetime":"2014-02-08 14:30:43","content":"<p><a href=\"http://codecombat.com/\" title=\"CodeCombat\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CodeCombat</a> is a web based game that teaches you how to code with Javascript by playing it and so far, the more I get to know it the more I like it!</p>\n<p><img src=\"http://i.imgur.com/GSuX3la.png\"></p>\n<p>The game has a 2D RPG skin with cute characters and runs directly in the browser. At the beginning it is a bit hard to get used to its UX and for those who are anxious, sorry to tell, but you will have to read the instructions. But when you start to get how it works it gets more fun and without noticing you are learning how to code and hacking the code they give you in order to pass the levels faster.</p>\n<p>The better part of Codecombat I just found out yesterday: the team who built it has <a href=\"http://blog.codecombat.com/we-have-open-sourced-everything\" title=\"Codecombat - We&#x27;ve Open-Sourced Everything\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">open-sourced everything</a>! I have even talked with the team and they are super accessible, they have provided a <a href=\"https://github.com/codecombat/codecombat/wiki/Developer-organization#wiki-communication\" title=\"Developer Organization\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">few aways of doing that</a>.</p>\n<p>There are a <a href=\"http://codecombat.com/contribute\" title=\"Contribute to Codecombat\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">bunch of ways to get involved</a> with the game and helping spread code education out there. So, if you are looking for a free and open-source software to contribute, you should consider this one.</p>\n","excerpt":"","description":"CodeCombat is a web based game that teaches you how to code with Javascript by playing it and so far, the more I get to know it the more I like it!","path":"/learn-javascript-playing","cover":"","tags":[{"id":"javascript","title":"javascript","path":"/tag/javascript"},{"id":"learning","title":"learning","path":"/tag/learning"},{"id":"code","title":"code","path":"/tag/code"}],"author":{"id":"anarute","title":"anarute","path":"/author/anarute"}}}]}},"context":{}}