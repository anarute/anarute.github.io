{"data":{"author":{"id":"anarute","title":"anarute","path":"/author/anarute","belongsTo":{"totalCount":11,"pageInfo":{"totalPages":2,"currentPage":1},"edges":[{"node":{"id":"f3620e182ebab7c23255a3e1e7170bb6","title":"26 dicas para facilitar sua vida com Git e Github","datetime":"2019-01-16 14:30:43","path":"/26-dicas-para-facilitar-sua-vida-com-git-e-github-parte-1","content":"<p>Entrei na brincadeira do Twitter compilar dica sobre algum assunto em troca de like ou RT e resolvi falar sobre git e GitHub que √© um assunto que sinto que muita gente tem dificuldade e se voc√™ trabalha com desenvolvimento de software, n√£o importa a linguagem e especialidade, garanto que git √© fundamental pro seu dia-a-dia.</p>\n<blockquote>\n<p>Tamb√©m quero brincar ü§ì</p>\n<p>1 RT = 1 dica de git ou Github</p>\n<p>‚Äî Ana Rute‚Äè üåà (@ana_rute) <a href=\"https://twitter.com/ana_rute/status/1083352112371765248?ref_src=twsrc%5Etfw\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">January 10, 2019</a></p>\n</blockquote>\n<p>Segue ent√£o um compilado de 26 dicas sobre Git e GitHub:</p>\n<ol>\n<li>Acabou de dar commit, n√£o deu push ainda mas quer adicionar mais algum arquivo?<br>\n1 - <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git add</code><br>\n2 - <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git commit --amend</code><br>\nO amend modifica o commit passado, ent√£o voc√™ pode inclusive us√°-lo pra remover arquivos do commit, mudar a mensagem, trocar autor, o que quiser!</li>\n<li>Criei um monte de commit que n√£o quero mais, mas n√£o quero perder as mudan√ßas que fiz:<br>\n<code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git reset --soft</code><br>\nAs suas mudan√ßas v√£o estar staged, prontas pra serem commitadas novamente</li>\n<li>Quero apagar tudo (commits e mudan√ßas) que fiz e deixar minha branch exatamente igual a um commit espec√≠fico ou branch:<br>\n<code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git reset --hard</code><br>\nSe quiser deixar igual a uma branch remota, pode ser <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git reset --hard origin/branch</code></li>\n<li>N√£o fa√ßo ideia de como deixei meu repo local nesse estado:<br>\n<code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git reflog</code><br>\nVai te dar um hist√≥rico do que voc√™ fez</li>\n<li>Mexi um monte num arquivo, mas quero commitar s√≥ uma parte das mudan√ßas:<br>\n<code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git add -p</code><br>\nVai te mostrar peda√ßo por peda√ßo do que voc√™ mudou e te perguntar o que quer colocar em stage</li>\n<li>\n<p>Ao come√ßar um projeto novo, n√£o se esque√ßa de j√° configurar o arquivo .gitignore pra evitar subir arquivos indesejados. Vai ser bem mais f√°cil se j√° fizer do come√ßo do que ter que remover depois ü§ô<br>\nAqui tem um monte de template que d√° pra copiar:</p>\n<blockquote>\n<p><a href=\"https://github.com/github/gitignore\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github/gitignore</a> - A collection of useful .gitignore templates. Contribute to github/gitignore development by creating an account on GitHub.</p>\n</blockquote>\n</li>\n<li>Quero ver o diff inteiro de c√≥digo do que foi feito nos √∫ltimos commits<br>\n<code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git log -p</code></li>\n<li>Quero acompanhar o fork de um projeto:<br>\n<code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git remote add &lt;https://url-do-fork.git&gt;</code><br>\nPra ver todos os remotes do repo q vc tem localmente:<br>\n<code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git remote -v</code><br>\nPra usar, √© s√≥ trocar origin pelo nome que voc√™ deu ao remote:<br>\ngit pull , git checkout nome-fork/branch...</li>\n<li>No GitHub, se voc√™ escrever na mensagem do commit \"close\", \"closes\", \"closed\", \"fixes\" ou \"fixed\" seguido de hashtag + n√∫mero da issue (por exemplo: \"Fixes #1234\") , a issue √© automaticamente fechada</li>\n<li>Para quem usa o VS Code, super recomendo o plugin Git Lens. Ele mostra visualmente todo o hist√≥rico de commits do arquivo, quem fez o qu√™ e quando, bem √∫til:<br>\n<a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitLens ‚Äî Git supercharged - Visual Studio Marketplace</a></li>\n<li>Criou uma branch com o nome errado e s√≥ percebeu bem depois, na hora de dar push? no worries:<br>\n<code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git branch -m nome-velho nome-novo</code></li>\n<li>Sabia que no GitHub d√° pra usar emoji nas mensagens de commit? Pra usar precisa seguir o modelo \":nome-do-emoji:\"<br>\nPra ser sincera eu n√£o sou muito f√£, mas num projeto mais zuerinha, quem sabe :smile:<br>\n<a href=\"https://www.webfx.com/tools/emoji-cheat-sheet/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Aqui tem uma colinha</a>.<br>\nQuem quiser ir al√©m no assunto emoji no commit, d√° uma olhada <a href=\"https://medium.com/walmartlabs/semantic-commit-messages-with-emojis-dba2541cea9a\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">nesse artigo</a>.</li>\n<li>Vc sabe a diferen√ßa entre git e GitHub? git √© o software de controle de vers√£o, GitHub √© uma plataforma para hospedar projetos que usam git. Fora o GitHub existem outras solu√ß√µes como BitBucket e GitLab, e por ser open source vc pode ter o seu pr√≥prio servidor de git</li>\n<li>Se voc√™ tem dificuldade com vim ou outro editor de linha de comando, √© poss√≠vel trocar o editor padr√£o que o git usa pra escrever as mensagens de commit ou resolver conflitos:<br>\n<code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git config --global core.editor &quot;seu-editor&quot;</code></li>\n<li>Eu entendo ter pregui√ßa de adicionar arquivo por arquivo, mas ao inv√©s de dar <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git add .</code> e vez ou outra subir o que n√£o deve, usa <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git add -u</code> que ele vai adicionar s√≥ os arquivos que j√° foram trackeados pelo git. Ou melhor, nunca use <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git add .</code></li>\n<li>Escreva mensagens de commit concisas e espec√≠ficas. Quanto mais detalhada for a descri√ß√£o do commit (to de olho em voc√™ s√≥ usar <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git commit -m</code>), melhor pro seu eu do futuro, principalmente se seu c√≥digo n√£o for muito comentado.</li>\n<li>Eu sou da turma dos micro commits: quanto mais commits melhor. A fun√ß√£o funcionou? commita. O teste passou? commita. Isso ajuda muito no futuro caso tenha que desfazer algo, ca√ßar bugs ou reaproveitar c√≥digo. Mesmo q n√£o esteja 100%, commita com \"WIP\" na frente q √© a dica 18</li>\n<li>Se voc√™ n√£o acabou o que tinha que fazer mas n√£o quer correr o risco de perder o que j√° foi feito, vc pode commitar e na mensagem adicionar \"WIP\" antes, que significa Work in Progress. Quando tiver pronto vc poder dar commit --amend e tirar o WIP da mensagem ;)</li>\n<li>Mais sobre WIP: essa dica √© s√≥ pra quando voc√™ estiver numa branch separada. Se tiver trabalhando com algu√©m na mesma branch, √© bom avisar pra n√£o mandar c√≥digo quebrado pra coleguinha. E evite mandar WIP pra master, j√° que devemos sempre evitar modificar o passado dessa branch</li>\n<li>Se tiver q modificar um commit do passado que √± seja o √∫ltimo, por exemplo pra tirar um commit WIP, a gente usa o <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git rebase -i</code>, que √© o rebase interativo. Esse j√° √© um pouco mais dif√≠cil, eu fiz um post que explica uma das formas de usar: anarute.com/preciso-modifi‚Ä¶</li>\n<li>Use <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git stash</code> pra guardar <em>temporariamente</em> os arquivos modificados q ainda √± foram commitados. √ötil qndo precisa trocar de branch, por ex., testar o c√≥digo sem suas mudan√ßas, ou testar em outra branch. Pra \"pegar\" as mudan√ßas de volta <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git stash pop</code></li>\n<li>Quero pegar s√≥ um commitzinho de uma branch que ainda n√£o t√° em master e jogar na branch que voc√™ est√°:<br>\n<code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">git cherry-pick</code></li>\n<li>Eu to dando v√°rias dicas e uma galera j√° t√° contribuindo falando outras formas de fazer algo que eu disse. Uma das coisas mais legais de git √© que tem v√°rios caminhos de chegar num mesmo resultado, voc√™ tem q ver o que √© melhor/mais produtivo pro seu fluxo de trabalho</li>\n<li>Eu vejo muita gente que t√° come√ßando tendo que digitar nome e usu√°rio TODA vez que clona, d√° push ou pull. Isso √© porque vc ainda n√£o adicionou uma chave SSH do seu computador no GitHub! Arrumar isso √© facinho: help.github.com/articles/addin‚Ä¶</li>\n<li>Todas as dicas dessa thread s√£o pra usar git na linha de comando. Por isso √© mega importante perder o medo do terminal! Ele n√£o morde, aos pouquinhos a gente se familiariza a ponto de preferir fazer tudo por l√°</li>\n<li>Sobre git e terminal: se vc ainda √± modificou seus dotfiles ou n√£o usa algum tema bonitinho q mostra qual branch vc t√°, status do staging, etc. Recomendo q fa√ßa j√°! Aumenta a produtividade exponencialmente.<br>\nEu uso zsh + oh my zsh + qlqr tema que trate git<br>\n<a href=\"https://github.com/robbyrussell/oh-my-zsh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Link para Oh my Zsh</a></li>\n</ol>\n","excerpt":"","description":"","tags":[{"id":"git","title":"git","path":"/tag/git"},{"id":"github","title":"github","path":"/tag/github"},{"id":"dicas","title":"dicas","path":"/tag/dicas"}]}},{"node":{"id":"08d6fa1ed3b0b9a9b4632ed5fde766ec","title":"Como restaurar backups em um banco PostgreSQL","datetime":"2017-02-24 14:30:43","path":"/como-restaurar-backups-em-um-banco-postgresql","content":"<p>De tempos em tempos eu preciso restaurar um backup de algum banco para outro ou\npreencher o banco de um novo ambiente de desenvolvimento local com dados\npara testes. Como n√£o √© uma tarefa di√°ria, nem sempre me lembro como faz, ent√£o\nresolvi juntar aqui o passo a passo at√© pra facilitar nas pr√≥ximas vezes e talvez\npossa tamb√©m ajudar algu√©m.</p>\n<p>Antes de poder restaurar algum backup, precisamos crear o dump! O comando utilizado\npara isso √© o <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">pg_dump</code> que j√° nos devolve um <em>dump</em> da tabela inteira - se\nquiser saber mais <a href=\"https://www.postgresql.org/docs/current/static/app-pgdump.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">clique aqui</a>\npara ler a documenta√ß√£o.</p>\n<pre>pg_dump dbname > backupfile.sql</pre>\n<p>No comando acima, extra√≠mos todos os dados do banco (troque <em>dbname</em> pelo nome\nda sua tabela) e jogamos em um arquivo <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">.sql</code>. Pronto, j√° temos o backup salvo.\n<strong>Dica:</strong> esse √© um jeito bem f√°cil de manter backup de seus bancos. Recomendo\ncriar um comando que fa√ßa esse backup e utilizar o\n<a href=\"https://help.ubuntu.com/community/CronHowto\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cron</a> para fazer isso\nautomaticamente sempre.</p>\n<p>Para restaurar o backup num banco, o postegres tamb√©m nos permite fazer isso de\num jeito bem simples, mas tem alguns detalhes:</p>\n<ol>\n<li>o banco precisa existir com o mesmo nome do banco que foi extra√≠do.</li>\n<li>o banco n√£o pode ter as tabelas criadas, sen√£o vai dar conflito e a\nrestaura√ß√£o n√£o vai dar certo.</li>\n</ol>\n<p>Nesse caso, se o banco j√° existir primeiro eu dou <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">dropdb db_name</code> que vai\ndeletar o banco (<strong>IMPORTANTE</strong>, eu s√≥ fa√ßo isso em bancos locais, porque isso\napaga <strong>todos os dados</strong> do banco, ent√£o <strong>NUNCA</strong> fa√ßa isso em produ√ß√£o a menos\nque voc√™ saiba exatamente o que est√° fazendo. D√° justa causa, hein? Deus t√°\nvendo). Depois de deletar, precisamos recri√°-la sen√£o a restaura√ß√£o n√£o vai\nfuncionar por n√£o encontrar o banco. Para recri√°-lo: <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">createdb db_name</code></p>\n<p>Por fim, para restaurar os dados, jogamos o arquivo no novo banco:</p>\n<pre>psql dbname < infile</pre>\n<p>Pronto, temos um banco restaurado! Para mim esse processo √© fundamental em dois\nmomentos: quando por algum motivo - normalmente tenso - eu preciso restaurar o\nbanco em produ√ß√£o ou quando vou come√ßar um novo ambiente de desenvolvimento e\npreciso de dados para testar o app e as mudan√ßas que estou fazendo.</p>\n","excerpt":"","description":"Guia b√°sico para criar e restaurar um dump de um banco em PostgreSQL","tags":[{"id":"sysadmin","title":"sysadmin","path":"/tag/sysadmin"},{"id":"postgresql","title":"postgresql","path":"/tag/postgresql"},{"id":"databases","title":"databases","path":"/tag/databases"},{"id":"db","title":"db","path":"/tag/db"}]}},{"node":{"id":"82338461f4fe3f4c963d8ca004c2949c","title":"Farewell Mozilla - or how it went fast!","datetime":"2016-08-23 14:30:43","path":"/farewell-mozilla-and-outreachy-or-how-it-went-fast","content":"<p>Wow, how fast can 3 months go? 3 months ago I was extremely happy and anxious about how I was going to manage to become a web dev intern at a <a href=\"http://anarute.com/getting-started-with-taskcluster/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">project I knew nothing about</a> and to really work as a developer in a company that I admire since I'm an internet user.</p>\n<p>Suddenly, here I am preparing the slides for my end-of-internship presentation on next Friday, 26th. It has been a lot of challenges, stress, learning and above all a huge personal growth! Some highlights of what I've learnt:</p>\n<p>‚úì What is Taskcluster and how the AWS provisioner works (ok, there's still a lot to learn here).</p>\n<p>‚úì What is an Azure entity and how to <a href=\"http://anarute.com/the-amiset-entity/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">create one</a>.</p>\n<p>‚úì How to run an application with no GUI interface and how to test things with <a href=\"http://mochajs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mocha</a> - and accept that some things we just <em>can't</em> see, but they work!</p>\n<p>‚úì How to build a <a href=\"http://anarute.com/how-to-manage-ami-sets/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React app</a> - I didn't build it from scratch but I definitely learnt a lot here.</p>\n<p>‚úì Ask for help soon instead of wasting hours and hours stuck on a small issue (such as a typo).</p>\n<p>‚úì Receiving a lot of comments and critics in your PR can actually be a good thing and an opportunity to learn.</p>\n<p>‚úì Not be afraid of making mistakes and make <em>stupid</em> questions - there's no such thing as a stupid question.</p>\n<p>‚úì How to work in a completely remote team and actually be very productive.</p>\n<p>‚úì Got so many great tips from powerful women with the Women in Tech series sessions (thanks to everyone involved to make this happen).</p>\n<p>Beyond all the technical and professional things, I also had a lot of fun! I had the opportunity to go to London and have the experience of what if feels like to be a Mozillian. I met so many awesome people on this path that I can only say thank you!</p>\n<p>Mostly thanks to Dustin, an awesome person who I had the privilege of having as my mentor during this period. Thank you, Dustin, for teaching me so much in so little time! For being a great career advisor, for pushing me when I wasn't confident about myself and for being a friend. Selena, you became a role model for me! I'm lucky I had the chance to meet you and to have you as our team leader. Kristel, it was awesome to meet you and share my challenges and frustrations with you, you are a very strong person, I hope you the best, always. Wander, always ready to help me when I didn't wake up in a good relationship with English words, I'm glad to call you a friend now, for sure we are going to meet a lot here in Brazil. Thanks, John and Eli for the code reviews - I learnt a lot with them. Andrea and Hassan, it was nice to meet you in London, we had a great time! Greg, I wish you the best on your new role on the team, you are already doing a great job! Pete, Jonas and Brian, unfortunately, we didn't have the chance to work much together but I could see how much effort and dedication you all put on Taskcluster, it's really inspiring!</p>\n<p>Thank you, Taskcluster team, it was a pleasure to work with you all. Such a passionate and highly skilled team. I learnt a lot with all of you!</p>\n<p><img src=\"/images/posts/plops-1.jpg\" alt=\"Platform Operations team at London All Hands\"></p>\n<p>PS.: If you are reading this and intend to apply to Outreachy, please do it, you won't regret it! Feel free to ask for help or tips at anarutecvm at gmail dot com.</p>\n","excerpt":"","description":"","tags":[{"id":"outreachy","title":"outreachy","path":"/tag/outreachy"},{"id":"FOSS","title":"FOSS","path":"/tag/FOSS"},{"id":"taskcluster","title":"taskcluster","path":"/tag/taskcluster"},{"id":"Mozilla","title":"Mozilla","path":"/tag/Mozilla"}]}},{"node":{"id":"b653b66d9ceafa2418e00990ffd4c7bb","title":"How to manage AMI sets","datetime":"2016-07-22 14:30:43","path":"/how-to-manage-ami-sets","content":"<p>After finishing the first version of the <a href=\"http://anarute.com/the-amiset-entity/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AMI sets entity</a>, now we need to be able to manage them.</p>\n<p>Taskcluster has already a set of tools to manage its components and elements: the <a href=\"https://tools.taskcluster.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">taskcluster tools</a>. In order to manage the AMI sets it was natural to build a tool for that. At first, our main goal is to build a minimal tool that allows us to list all the AMI sets known to the AWS provisioner and to add, edit and delete AMI sets.</p>\n<p>The final shape of an AMI set is this:</p>\n<pre>\"amis\": \n  [\n    {\n      \"region\": \"us-west-1\",\n      \"hvm\": \"ami-111\",\n      \"pv\": \"ami-222\"\n    }\n  ]\n</pre>\n<p>The ideal way to manage this is to allow the user to edit each field separately and check if the AMIs are valid automatically, but for now we are editing it as a JSON object since the back end already checks if the data is valid.</p>\n<p>The taskcluster tools are built with <a href=\"https://facebook.github.io/react/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React</a> and before this project I have never built anything with it. So to start, there's no better way than compare how all the other tools are built. I knew that I needed to figure out how to list the amiSets and how to embed a code editor to be used to edit and create amiSets, so my main examples were the <a href=\"https://tools.taskcluster.net/auth/roles/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Roles tool</a> and the text editor from <a href=\"https://tools.taskcluster.net/task-creator/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Task Creator tool</a>. The editor used in taskcluster tools is <a href=\"http://codemirror.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CodeMirror,</a> a text editor built in javascript for the browser.</p>\n<p>My first step was to build the add amiSet function - after all, without amiSets I cannot test any other endpoint. I started to see progress when apparently no errors showed up when trying to add an amiSet, but to check if it really worked I needed the listing function, then the view function. After making this work, edit and delete were the final ones. A <a href=\"https://github.com/taskcluster/taskcluster-tools/pull/121\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">first version</a> is already being reviewed and hopefully it will be published soon. We still have a lot of improvements to make but it seems good enough to move forward and start to incorporate the amiSets in the AWS provisioner architecture.</p>\n<p>Even after testing the AMI sets entity endpoints in the back end, I wasn't sure if it was really working because I could only see that it passed the tests that I have built, but I couldn't really see the amiSets (<em>and I must say I'm a very visual person</em>) but now with the tool I finally can see them, and it is grateful to see that what you're doing is working! - until it breaks something, of course.</p>\n","excerpt":"","description":"","tags":[{"id":"outreachy","title":"outreachy","path":"/tag/outreachy"},{"id":"FOSS","title":"FOSS","path":"/tag/FOSS"},{"id":"taskcluster","title":"taskcluster","path":"/tag/taskcluster"},{"id":"Mozilla","title":"Mozilla","path":"/tag/Mozilla"}]}},{"node":{"id":"437cfbeb0ed8dc8f278f64eb59e0357d","title":"The AmiSet Entity","datetime":"2016-06-10 14:30:43","path":"/the-amiset-entity","content":"<p>Taskcluster is a complex and big project and I'm working on a specific part of it: where we manage the Amazon instances and Machine Images (AMIs). As I've mentioned in my <a href=\"http://anarute.com/getting-started-with-taskcluster/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">last post</a>, my job here starts by creating a new database entity called AMI set, which stores sets of AMIs keyed by region and virtualization type.</p>\n<p>My work during the last two weeks were to understand how the AWS provisioner project is organized and how to create a new entity. Since I was creating something I knew nothing about, start coding seems to be the hardest part because I have no references of things I've done before and I need to learn basically everything. A good advice for newbies would be to chop everything into the smallest parts we can (I think this fits for almost every job and area).</p>\n<p>I took the Worker Type entity as my starting point as suggested by <a href=\"http://code.v.igoro.us/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dustin</a> - my mentor - and wrote the AMI Set entity definition by checking what I could replicate from WorkerType and discarding what didn't make sense. Which ended up with this basic definition:</p>\n<pre>let AmiSet = base.Entity.configure({\n\nproperties: {\n    id: base.Entity.types.String,\n    amis: base.Entity.types.JSON,\n    // Store the date of last modification for this entity\n    lastModified: base.Entity.types.Date,\n  },\n});\n</pre>\n<p>This is a very simple entity and its core part is the <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">amis</code> property, which needs to store the AMIs by region and virtualization type. The thing is, since it is a \"generic\" JSON object we need to decide how the object will be. We have mainly two options:</p>\n<pre>{\n   \"us-west-1\": {\n      \"hvm\": \"ami-111\",\n      \"pv\": \"ami-222\"\n  },\n   \"us-east-1\": {\n      \"hvm\": \"ami-111\",\n      \"pv\": \"ami-222\"\n  }\n}\n</pre>\n<p>Or</p>\n<pre>[\n   {\n      \"region\": \"us-west-1\",\n      \"hvm\": \"ami-111\",\n      \"pv\": \"ami-222\"\n   },\n   {\n      \"region\": \"us-east-1\",\n      \"hvm\": \"ami-111\",\n      \"pv\": \"ami-222\"\n   }\n]\n</pre>\n<p>As <a href=\"https://github.com/taskcluster/aws-provisioner/pull/85#discussion-diff-66091884\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@jhford pointed and @djmitche agrees</a>:</p>\n<blockquote>\n<p>Whether we have a list of objects or a straight mapping is something that you'll have to pick. A list of objects is really nice because you can do really neat things with <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">Array.prototype.map</code> and <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">Array.prototype.filter</code>. A mapping is really nice because it's easier to address the values and it is impossible to have duplicates. Error checking with the object will be easier, but the list of objects is more in line with what we do elsewhere in the provisioner and probably what I'd prefer to see.</p>\n</blockquote>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Here</a> we can see more methods that we can do with <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">Array.prototype</code>. As explained above, probably we'll go with the list of objects option.</p>\n<p>After creating the entity I started adding its create and delete endpoints. The hardest part this time was to understand the functions and specially if I was dealing with instances, classes or properties.</p>\n<p>The thing that made me learn the most were <a href=\"https://github.com/taskcluster/aws-provisioner/pull/85\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the comments</a> Dustin and John made in my Pull Request. It is really helpful to know the things you are doing right or wrong and to know where to go from there. So an important advice here is to start sending patches as soon as possible and don't fear making mistakes - they will happen anyway and we can only learn from them.</p>\n","excerpt":"","description":"","tags":[{"id":"outreachy","title":"outreachy","path":"/tag/outreachy"},{"id":"FOSS","title":"FOSS","path":"/tag/FOSS"},{"id":"taskcluster","title":"taskcluster","path":"/tag/taskcluster"},{"id":"Mozilla","title":"Mozilla","path":"/tag/Mozilla"}]}},{"node":{"id":"65680ba6ce71a215b99397579f1b63d1","title":"Getting started with TaskCluster","datetime":"2016-05-27 14:30:43","path":"/getting-started-with-taskcluster","content":"<p>This was my first week working for Mozilla as an <a href=\"https://gnome.org/outreachy/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Outreachy</a> intern. The first challenge was to understand Mozilla's culture and how to fit in. We had some meetings about how the program works and to get updates about TaskCluster, the project I'll be working at for the next 3 months. Mozilla has an awesome structure to receive new employees and I felt very welcomed, but that also means a lot of information to process and organize, which includes how to communicate with a fully remote team, setting up accounts, organizing meetings schedule, entering email lists, using Mozilla tools, joining IRC channels, etc.</p>\n<p>After organizing all these new information, it is time to dive into TaskCluster! From <a href=\"https://docs.taskcluster.net/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Taskcluster documentation</a> we can read:</p>\n<blockquote>\n<p><em>TaskCluster</em> is the task execution framework that supports Mozilla's continuous integration and release processes.</p>\n</blockquote>\n<p>For me it took a while to understand what TaskCluster is and what it is used for, but the process of understanding it is giving me a lot of \"ah-ha\" moments, which is a great feeling that shows me that I'm already learning a lot. For those who want to learn more, <a href=\"https://docs.taskcluster.net/tutorial/what-is-tc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this page</a> says a bit more about TaskCluster.</p>\n<p><strong>My job at TaskCluster:</strong> add robust AMI management to the TaskCluster AWS Provisioner. More details on bug <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1265390\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">#1265390</a>.</p>\n<p><strong>My first task:</strong> create AmiSet entity.</p>\n<p>Before I'm able to code anything, I have a bunch of things to do and to understand - the first one is to control the anxiety of wanting to start to code right away...</p>\n<p>I started by understanding the scope and all the parts involved. So a small glossary was very helpful for me:</p>\n<ul>\n<li><a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AMI</a>: \"An Amazon Machine Image (AMI) provides the information required to launch an instance, which is a virtual server in the cloud.\"</li>\n<li><a href=\"https://aws.amazon.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AWS</a>: Amazon Web Services. A suite of cloud computing services offered by Amazon. Its <a href=\"https://aws.amazon.com/start-now/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">website</a> brings a bunch of useful tutorials.</li>\n<li><a href=\"https://github.com/taskcluster/aws-provisioner\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AWS provisioner</a>: \"it is responsible for starting Amazon EC2 instances to perform tasks in the TaskCluster queue. It monitors queue lengths and uses spot bidding to maximize the cost-effectiveness of its resources.\"</li>\n<li>Azure Table Storage: Microsoft Azure Table storage service.</li>\n<li><a href=\"https://aws.amazon.com/ec2/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">EC2</a>: Amazon Elastic Compute Cloud. \"It's a web service that provides resizable compute capacity in the cloud\".</li>\n<li>Entity: in Azure context, \"Tables store data as collections of entities. Entities are similar to rows. An entity has a primary key and a set of properties. A property is a name, typed-value pair, similar to a column.\" TaskCluster team has built a wrapper that is used in the project: <a href=\"https://github.com/taskcluster/azure-entities\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Azure Table Storage Entities</a>.</li>\n<li>AMI Set: \"An AMI Set is a collection of AMIs with a single name (its AMI Set ID). Each AMI in the set is keyed by its virtualization type (<a href=\"http://cloudacademy.com/blog/aws-ami-hvm-vs-pv-paravirtual-amazon/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PV or HVM</a>) and by its AWS region.\"</li>\n</ul>\n<p>Now that everything is much clearer, let's create AmiSet entity :) - uptades next week!</p>\n","excerpt":"","description":"","tags":[{"id":"outreachy","title":"outreachy","path":"/tag/outreachy"},{"id":"FOSS","title":"FOSS","path":"/tag/FOSS"},{"id":"taskcluster","title":"taskcluster","path":"/tag/taskcluster"},{"id":"Mozilla","title":"Mozilla","path":"/tag/Mozilla"}]}}]}}},"context":{}}