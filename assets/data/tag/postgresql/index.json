{"hash":"752c6ce69aa6bc2761e11346ad248f842b46c834","data":{"tag":{"id":"postgresql","title":"postgresql","path":"/tag/postgresql/","belongsTo":{"totalCount":1,"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"id":"08d6fa1ed3b0b9a9b4632ed5fde766ec","title":"Como restaurar backups em um banco PostgreSQL","datetime":"2017-02-24 14:30:43","path":"/como-restaurar-backups-em-um-banco-postgresql/","content":"<p>De tempos em tempos eu preciso restaurar um backup de algum banco para outro ou\npreencher o banco de um novo ambiente de desenvolvimento local com dados\npara testes. Como não é uma tarefa diária, nem sempre me lembro como faz, então\nresolvi juntar aqui o passo a passo até pra facilitar nas próximas vezes e talvez\npossa também ajudar alguém.</p>\n<p>Antes de poder restaurar algum backup, precisamos crear o dump! O comando utilizado\npara isso é o <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">pg_dump</code> que já nos devolve um <em>dump</em> da tabela inteira - se\nquiser saber mais <a href=\"https://www.postgresql.org/docs/current/static/app-pgdump.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">clique aqui</a>\npara ler a documentação.</p>\n<pre>pg_dump dbname > backupfile.sql</pre>\n<p>No comando acima, extraímos todos os dados do banco (troque <em>dbname</em> pelo nome\nda sua tabela) e jogamos em um arquivo <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">.sql</code>. Pronto, já temos o backup salvo.\n<strong>Dica:</strong> esse é um jeito bem fácil de manter backup de seus bancos. Recomendo\ncriar um comando que faça esse backup e utilizar o\n<a href=\"https://help.ubuntu.com/community/CronHowto\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cron</a> para fazer isso\nautomaticamente sempre.</p>\n<p>Para restaurar o backup num banco, o postegres também nos permite fazer isso de\num jeito bem simples, mas tem alguns detalhes:</p>\n<ol>\n<li>o banco precisa existir com o mesmo nome do banco que foi extraído.</li>\n<li>o banco não pode ter as tabelas criadas, senão vai dar conflito e a\nrestauração não vai dar certo.</li>\n</ol>\n<p>Nesse caso, se o banco já existir primeiro eu dou <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">dropdb db_name</code> que vai\ndeletar o banco (<strong>IMPORTANTE</strong>, eu só faço isso em bancos locais, porque isso\napaga <strong>todos os dados</strong> do banco, então <strong>NUNCA</strong> faça isso em produção a menos\nque você saiba exatamente o que está fazendo. Dá justa causa, hein? Deus tá\nvendo). Depois de deletar, precisamos recriá-la senão a restauração não vai\nfuncionar por não encontrar o banco. Para recriá-lo: <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">createdb db_name</code></p>\n<p>Por fim, para restaurar os dados, jogamos o arquivo no novo banco:</p>\n<pre>psql dbname < infile</pre>\n<p>Pronto, temos um banco restaurado! Para mim esse processo é fundamental em dois\nmomentos: quando por algum motivo - normalmente tenso - eu preciso restaurar o\nbanco em produção ou quando vou começar um novo ambiente de desenvolvimento e\npreciso de dados para testar o app e as mudanças que estou fazendo.</p>\n","excerpt":"","description":"Guia básico para criar e restaurar um dump de um banco em PostgreSQL","author":{"id":"anarute","title":"anarute","path":"/author/anarute/"}}}]}}},"context":{}}